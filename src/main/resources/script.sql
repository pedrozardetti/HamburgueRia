CREATE TABLE IF NOT EXISTS CUSTOMER (
    ID UUID DEFAULT RANDOM_UUID() PRIMARY KEY,
    NAME VARCHAR (100) NOT NULL,
    EMAIL VARCHAR (100) NOT NULL,
    PASSWORD VARCHAR (100) NOT NULL,
    TYPE VARCHAR(10) NOT NULL CHECK (TYPE IN ('ADMIN', 'CLIENTE'))

);


MERGE INTO CUSTOMER (ID, NAME, EMAIL, PASSWORD, TYPE)
    KEY (EMAIL)
    VALUES (RANDOM_UUID(), 'admin', 'admin@gmail.com', 'admin', 'ADMIN');



CREATE TABLE IF NOT EXISTS ADDRESS (
    ID UUID DEFAULT RANDOM_UUID() PRIMARY KEY,
    CEP VARCHAR(20) NOT NULL,
    STREET VARCHAR(150) NOT NULL,
    NEIGHBORHOOD VARCHAR(55) NOT NULL,
    CUSTOMER_ID UUID,
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(ID)

);


CREATE TABLE IF NOT EXISTS ORDERS (
    ID UUID DEFAULT RANDOM_UUID() PRIMARY KEY,
    MAX_PRICE DECIMAL (10,2) NOT NULL,
    CREATED_AT DATE NOT NULL,
    CUSTOMER_ID UUID NOT NULL,
    ADDRESS_ID UUID NOT NULL,
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(ID),
    FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESS(ID)

);


CREATE TABLE IF NOT EXISTS PRODUCT (
    ID UUID DEFAULT RANDOM_UUID() PRIMARY KEY,
    NAME VARCHAR(55) NOT NULL,
    PRICE DECIMAL(10,2) NOT NULL,
    TYPE VARCHAR(10) NOT NULL CHECK (TYPE IN ('BURGERS', 'BEBIDAS', 'SOBREMESAS', 'PORCOES')),
    URL VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS ORDERS_PRODUCT (
    ID UUID DEFAULT RANDOM_UUID() PRIMARY KEY,
    ORDERS_ID UUID NOT NULL,
    PRODUCT_ID UUID NOT NULL,
    QUANTITY INT NOT NULL,
    FOREIGN KEY (ORDERS_ID) REFERENCES ORDERS(ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(ID)
);





